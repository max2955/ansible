---
- hosts: d2
  tasks:
   - name: Adding DotDeb stretch repository
     apt_repository: repo={{item}}
     with_items:
      - deb http://packages.dotdeb.org stretch all
      - deb-src http://packages.dotdeb.org stretch all
     tags: dotdeb
   - name: Installing DotDeb key
     apt_key: url=http://www.dotdeb.org/dotdeb.gpg
     tags: dotdeb
   - name: Copy apache preference repo
     template:
       src: apache2.pref
       dest: "/etc/apt/preferences.d"
   - name: Copy nginx preference repo
     template:
       src: nginx.pref
       dest: "/etc/apt/preferences.d"
   - name: Installing latest nginx
     apt: name=nginx update_cache=yes state=latest
   - name: APT install latest apache
     apt: name=apache2 update_cache=yes state=latest
   - name: Ensure group test1local exists
     group:
       name: test1local
       state: present
   - name: Ensure group test2local exists
     group:
       name: test2local
       state: present
   - name: Adding the user test1local_admin
     user:
       name: test1local_admin
       shell: /bin/false
       groups: test1local
       append: yes
   - name: Adding the user test2local_admin
     user:
       name: test2local_admin
       shell: /bin/false
       groups: test2local
       append: yes
   - name: Creating directory for test1.local
     file:
       path: /var/www/test1.local/dyn
       state: directory
       mode: 0755
       owner: test1local_admin
       group: test1local
   - name: Creating directory for test1.local
     file:
       path: /var/www/test2.local/dyn
       state: directory
       mode: 0755
       owner: test2local_admin
       group: test2local
   - name: Delete interfaces file
     file:
       path: /etc/network/interfaces
       state: absent
   - name: Copy new  interfaces file
     template:
       src: interfaces
       dest: "/etc/network/"
   - name: Start 1 interface
     command: bash -c "ifup enp0s3:0"
   - name: Start 2 interface
     command: bash -c "ifup enp0s3:1"
   - name: Add test1 to /etc/hosts
     lineinfile:
       path: /etc/hosts
       line: '192.168.1.131 test1.local'
       state: present
   - name: Add test2 to /etc/hosts
     lineinfile:
       path: /etc/hosts
       line: '192.168.1.132 test2.local'
       state: present
   - name: Copy config file for test1 apache site
     template:
       src: apache2/test1.local.conf
       dest: "/etc/apache2/sites-available"
   - name: Copy config file for test2 apache site
     template:
       src: apache2/test2.local.conf
       dest: "/etc/apache2/sites-available"
   - name: Create links 1
     file:
       src: /etc/apache2/sites-available/test1.local.conf
       dest: /etc/apache2/sites-enabled/test1.local.conf
       state: link
   - name: Create links 2
     file:
       src: /etc/apache2/sites-available/test2.local.conf
       dest: /etc/apache2/sites-enabled/test2.local.conf
       state: link
   - name: Ensite 1
     command: bash -c "a2ensite test1.local.conf"
   - name: Ensite 2
     command: bash -c "a2ensite test2.local.conf"
   - name: Copy config file for test1 nginx site
     template:
       src: nginx/test1.local
       dest: "/etc/nginx/sites-available"
   - name: Copy config file for test2 nginx site
     template:
       src: nginx/test2.local
       dest: "/etc/nginx/sites-available"
   - name: Create links 1
     file:
       src: /etc/nginx/sites-available/test1.local
       dest: /etc/nginx/sites-enabled/test1.local
       state: link
   - name: Create links 2
     file:
       src: /etc/nginx/sites-available/test2.local
       dest: /etc/nginx/sites-enabled/test2.local
       state: link
   - name: Replace listen port
     replace:
       path: /etc/apache2/ports.conf
       regexp: '^(NameVirtualHost|Listen)\s+80\s*$'
       replace: 'Listen 81'
   - name: Update repositories cache and install itk package
     apt:
       name: libapache2-mpm-itk
       update_cache: yes
   - name: Installing PHP
     apt: name=libapache2-mod-php7.0 update_cache=yes state=latest
   - name: Installing PHP
     apt: name=php7.0 update_cache=yes state=latest
   - name: Installing PHP
     apt: name=php7.0-cli update_cache=yes state=latest
   - name: Installing PHP
     apt: name=php7.0-mcrypt update_cache=yes state=latest
   - name: Installing PHP
     apt: name=php7.0-intl update_cache=yes state=latest
   - name: Installing PHP
     apt: name=php7.0-mysql update_cache=yes state=latest
   - name: Installing PHP
     apt: name=php7.0-curl update_cache=yes state=latest
   - name: Installing PHP
     apt: name=php7.0-gd update_cache=yes state=latest
   - name: Installing PHP
     apt: name=php7.0-soap update_cache=yes state=latest
   - name: Installing PHP
     apt: name=php7.0-xml update_cache=yes state=latest
   - name: Installing PHP
     apt: name=php7.0-zip update_cache=yes state=latest
   - name: Installing PHP
     apt: name=php7.0-readline update_cache=yes state=latest
   - name: Installing PHP
     apt: name=php7.0-opcache update_cache=yes state=latest
   - name: Installing PHP
     apt: name=php7.0-json update_cache=yes state=latest
   - name: Installing PHP
     apt: name=php7.0-gd update_cache=yes state=latest
   - name: Installing MySQL
     apt: name=mariadb-server update_cache=yes state=latest
   - name: Installing MySQL
     apt: name=python-mysqldb update_cache=yes state=latest
   - name: Set the root password 
     mysql_user: login_user=root login_password="ThisIsRootPassword" user=root password="ThisIsRootPassword"
   - name: Secure the root user for IPV6 localhost (::1)
     mysql_user: login_user=root login_password="ThisIsRootPassword" user=root password="ThisIsRootPassword" host="::1"
   - name: Secure the root user for IPV4 localhost (127.0.0.1)
     mysql_user: login_user=root login_password="ThisIsRootPassword" user=root password="ThisIsRootPassword" host="127.0.0.1"
   - name: Secure the root user for localhost domain
     mysql_user: login_user=root login_password="ThisIsRootPassword" user=root password="ThisIsRootPassword" host="localhost"
   - name: Secure the root user for server_hostname domain
     mysql_user: login_user=root login_password="ThisIsRootPassword" user=root password="ThisIsRootPassword" host="ubu"
   - name: Deletes anonymous server user
     mysql_user: login_user=root login_password="ThisIsRootPassword" user="" host_all=yes state=absent
   - name: Removes the test database
     mysql_db: login_user=root login_password="ThisIsRootPassword" db=test state=absent
   - name: Create a new database joomla_db1
     mysql_db:
       name: joomla_db1
       state: present
       login_user: root
       login_password: ThisIsRootPassword
   - name: Create a new database joomla_db2
     mysql_db:
       name: joomla_db2
       state: present
       login_user: root
       login_password: ThisIsRootPassword
   - mysql_user:
       name: joomla1@localhost
       password: JoomlaPassword1
       priv: 'joomla_db1.*:ALL'
       state: present
   - mysql_user:
       name: joomla2@localhost
       password: JoomlaPassword1
       priv: 'joomla_db2.*:ALL'
       state: present
   - name: Configure PHP
     replace:
       path: /etc/php/7.0/apache2/php.ini
       regexp: '^memory_limit.*$'
       replace: 'memory_limit = 256M'
   - name: Configure PHP
     replace:
       path: /etc/php/7.0/apache2/php.ini
       regexp: '^upload_max_filesize.*$'
       replace: 'upload_max_filesize = 32M'
   - name: Configure PHP
     replace:
       path: /etc/php/7.0/apache2/php.ini
       regexp: '^post_max_size.*$'
       replace: 'post_max_size = 32M'
   - name: Configure PHP
     replace:
       path: /etc/php/7.0/apache2/php.ini
       regexp: '^;date.timezone.*$'
       replace: 'date.timezone = Asia/Kolkata'
   - name: Download Joomla
     get_url:
       url: https://mirror.myjoomla.io/Joomla_3.8.5-Stable-Full_Package.tar.gz
       dest: /tmp/Joomla_3.8.5-Stable-Full_Package.tar.gz
       mode: 0777
   - name: Unpack Joomla1
     unarchive:
       src: /tmp/Joomla_3.8.5-Stable-Full_Package.tar.gz
       dest: /var/www/test1.local/dyn
       remote_src: yes
   - name: Unpack Joomla2
     unarchive:
       src: /tmp/Joomla_3.8.5-Stable-Full_Package.tar.gz
       dest: /var/www/test2.local/dyn
       remote_src: yes
   - name: Set permisions
     file:
       path: /var/www/test1.local/
       owner: test1local_admin
       group: test1local
       mode: 0777
       recurse: yes
   - name: Set permisions
     file:
       path: /var/www/test2.local/
       owner: test2local_admin
       group: test2local
       mode: 0777
       recurse: yes
   - name: Reload service apache2
     systemd:
       name: apache2
       state: reloaded
   - name: Reload service nginx
     systemd:
       name: nginx
       state: reloaded
